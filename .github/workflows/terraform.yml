name: Terraform Pipeline

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

env:
    AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    #REGION: ${{ variables.REGION }}

permissions:
    id-token: write
    contents: read

jobs:
    init:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./terraform
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Configure AWS credentials
                uses: aws-actions/configure-aws-credentials@v4
                with:
                    aws-region: us-east-1
                    role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubActionsRole

            -   name: Set up Terraform
                uses: hashicorp/setup-terraform@v3
                with:
                    terraform_version: 1.6.0

            -   name: Terraform Init
                run: terraform init

            -   name: Create terraform cache
                uses: actions/cache/save@v4
                with:
                    path: terraform/.terraform*
                    key: terraform-cache-${{ runner.os }}-${{ github.run_id }}

    check:
        needs: init
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./terraform
        steps:
            -   name: Checkout Code
                uses: actions/checkout@v3

            -   name: Restore terraform cache
                uses: actions/cache/restore@v4
                with:
                    path: terraform/.terraform*
                    key: terraform-cache-${{ runner.os }}-${{ github.run_id }}
                    fail-on-cache-miss: true

            -   name: Set up Terraform
                uses: hashicorp/setup-terraform@v3
                with:
                    terraform_version: 1.6.0

            -   name: Validate Terraform files
                run: terraform validate

            -   name: Check Formatting
                run: terraform fmt -check

    plan:
        needs: check
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./terraform
        steps:
            -   name: Checkout Code
                uses: actions/checkout@v3

            -   name: Configure AWS credentials
                uses: aws-actions/configure-aws-credentials@v4
                with:
                    aws-region: us-east-1
                    role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubActionsRole

            -   name: Restore terraform cache
                uses: actions/cache/restore@v4
                with:
                    path: terraform/.terraform*
                    key: terraform-cache-${{ runner.os }}-${{ github.run_id }}
                    fail-on-cache-miss: true

            -   name: Setup Terraform
                uses: hashicorp/setup-terraform@v2
                with:
                    terraform_version: 1.6.0

            -   name: Terraform Plan
                run: terraform plan -input=false -refresh=true

    apply:
        needs: plan
        #if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./terraform
        steps:
            -   name: Checkout Code
                uses: actions/checkout@v3

            -   name: Configure AWS credentials
                uses: aws-actions/configure-aws-credentials@v4
                with:
                    aws-region: us-east-1
                    role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubActionsRole

            -   name: Restore terraform cache
                uses: actions/cache/restore@v4
                with:
                    path: terraform/.terraform*
                    key: terraform-cache-${{ runner.os }}-${{ github.run_id }}
                    fail-on-cache-miss: true

            -   name: Setup Terraform
                uses: hashicorp/setup-terraform@v2
                with:
                    terraform_version: 1.6.0

            -   name: Terraform Apply
                run: terraform apply -auto-approve
